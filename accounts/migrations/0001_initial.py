# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-03 19:27
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import establishment.accounts.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('localization', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=256)),
                ('template', models.TextField(max_length=131072)),
                ('key', models.CharField(default=establishment.accounts.models.random_key, max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmailAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('primary', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'EmailAddress',
            },
        ),
        migrations.CreateModel(
            name='EmailStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emails', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ObjectPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=256, null=True)),
            ],
            options={
                'db_table': 'ObjectPermissions',
            },
        ),
        migrations.CreateModel(
            name='UnverifiedEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('sent', models.DateTimeField(null=True)),
                ('key', models.CharField(max_length=64, unique=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='unverified_emails', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UnverifiedEmail',
            },
        ),
        migrations.CreateModel(
            name='UserCustomSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settings', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'UserCustomSettings',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, max_length=512, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserGroup',
            },
        ),
        migrations.CreateModel(
            name='UserGroupMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('muted', models.BooleanField(default=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='accounts.UserGroup')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserGroupMember',
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(max_length=128)),
                ('read', models.BooleanField(default=False)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserNotification',
            },
        ),
        migrations.CreateModel(
            name='UserReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Downvote'), (1, 'Upvote')])),
            ],
            options={
                'db_table': 'UserReaction',
            },
        ),
        migrations.CreateModel(
            name='UserReactionCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upvotes_count', models.IntegerField(default=0)),
                ('downvotes_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'UserReactionCollection',
            },
        ),
        migrations.AddField(
            model_name='userreaction',
            name='reaction_collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='accounts.UserReactionCollection'),
        ),
        migrations.AddField(
            model_name='userreaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='usercustomsettings',
            name='last_read_notification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.UserNotification'),
        ),
        migrations.AddField(
            model_name='usercustomsettings',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='objectpermission',
            name='groups',
            field=models.ManyToManyField(related_name='_objectpermission_groups_+', to='accounts.UserGroup'),
        ),
        migrations.AddField(
            model_name='objectpermission',
            name='users',
            field=models.ManyToManyField(related_name='_objectpermission_users_+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='userreaction',
            unique_together=set([('reaction_collection', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='usergroupmember',
            unique_together=set([('group', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='unverifiedemail',
            unique_together=set([('user', 'email')]),
        ),
        migrations.AlterUniqueTogether(
            name='emailaddress',
            unique_together=set([('user', 'email')]),
        ),
    ]
